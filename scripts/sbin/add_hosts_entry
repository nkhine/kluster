#!/bin/bash

# by Dan Povey, March 6 2013.

if [ $# -lt 3 ]; then
   echo "Usage: add_hosts_entry <hosts-file> <ip-address> <canonical-name> <other-names...>"
   echo "e.g.: add_hosts_entry /etc/hosts 125.23.12.4 master master.kluster"
   echo "to remove an entry, do e.g.:"
   echo "add_hosts_entry /etc/hosts --remove master"
   echo "(note: the position of the --remove string cannot be changed from this example)"
   exit 1;
fi


hosts=$1
shift # so $* is the line we want to add.

[ `whoami` != root ] && echo "You must run this script as root" && exit 1;

lockfile-create $hosts || exit 1;
trap 'lockfile-remove $hosts' EXIT

ip=$1
name=$2

prog=`basename $0`
function my_logger {
    echo $*
    logger -t $prog $*
}


[ ! -f $hosts ] && my_logger "hosts file $hosts does not exist" && exit 1;
[ ! -w $hosts ] && my_logger "hosts file $hosts is not writable (or you need to be root)" && exit 1

awk=/usr/bin/awk
[ ! -f $awk ] && my_logger "we require awk to be present" && exit 1;

[ "`echo $ip | $awk -F. '{print NF}'`" != 4 ] && [ "$ip" != "--remove" ] && my_logger "Invalid IP address '$ip'" && exit 1;
[ "`echo $name | $awk '{print NF}'`" != 1 ] && my_logger "Invalid name '$name'" && exit 1; # e.g. empty or has spaces.

tempfile=`mktemp` || exit 1;

if [ "$ip" != "--remove" ]; then
   my_logger "adding $hosts entry $*"
   echo $* > $tempfile # Put in the entry the user asked to be put in.
else
   my_logger "removing any $hosts entries matching name $name"
   echo -n > $tempfile # We're just removing any matching entries.
fi
cat $hosts | $awk -v name=$name '{if ($2 != name){ print; } }' >> $tempfile

cat $tempfile > $hosts
chmod 644 $hosts

if [ $hosts == /etc/hosts ] && [ `hostname` == master ]; then
  cd /var/yp
  make
  # We do "make" twice, because I've seen it get confused about 
  # the times of these things and fail to update the files,
  # when this script was called to add two hosts
  # at about the same time.
  sleep 1
  touch /etc/hosts
  make
fi

rm $tempfile

exit 0

